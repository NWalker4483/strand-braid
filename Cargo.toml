[workspace]
resolver = "2"
members = [
    "ads-apriltag",
    "ads-apriltag/apriltag-track-movie",
    "ads-webasm",
    "ads-webasm/example",
    "basic-frame",
    "braid",
    "braid/braid-run",
    "braid/braid-run/braid_frontend",
    "braid/braidz-writer",
    "braid/braidz-writer/cli",
    "braid-config-data",
    "braid-offline",
    "braid-process-video",
    "braidz-parser",
    "braidz-parser/braidz-chunked-iter",
    "braidz-parser/braidz-chunked-iter/pybraidz-chunked-iter",
    "braidz-parser/braidz-cli",
    "braidz-rerun",
    "braidz-rerun/braidz-export-rrd",
    "braidz-rerun/rerun-braidz-viewer",
    "braidz-types",
    "braidz-viewer",
    "bui-backend-session",
    "bui-backend-session/types",
    "build-util",
    "camera/ci2",
    "camera/ci2-async",
    "camera/ci2-cli",
    "camera/ci2-pylon-types",
    "camera/ci2-pyloncxx",
    "camera/ci2-remote-control",
    "camera/ci2-simple-async-demo",
    "camera/ci2-simple-demo",
    "camera/ci2-types",
    "camera/ci2-vimba",
    "camera/ci2-vimba-types",
    "camera/vimba",
    "event-stream-types",
    "fastfreeimage",
    "flydra-feature-detector",
    "flydra-feature-detector/flydra-feature-detector-types",
    "flydra-feature-detector/flydra-pt-detect-cfg",
    "flydra-types",
    "flydra2",
    "flytrax-csv-to-braidz",
    "freemovr-calibration",
    "freemovr-calibration/freemovr-calibration-cli",
    "freemovr-calibration/freemovr-calibration-webapp",
    "freemovr-calibration/ncollide-geom",
    "geometry/braid-april-cal",
    "geometry/braid-april-cal/braid-april-cal-cli",
    "geometry/braid-april-cal/braid-april-cal-webapp",
    "geometry/braid-april-cal/flytrax-apriltags-calibration",
    "geometry/braidz-mcsc",
    "geometry/bundle-adj",
    "geometry/camcal",
    "geometry/flydra-mvg",
    "geometry/mcsc-structs",
    "geometry/mvg",
    "geometry/mvg/mvg-util",
    "geometry/opencv-calibrate",
    "geometry/opencv-calibrate/find-chessboard",
    "geometry/parry-geom",
    "geometry/refraction",
    "geometry/refraction/bisection-search",
    "geometry/simple-obj-parse",
    "geometry/textured-tri-mesh",
    "geometry/undistort-image",
    "http-video-streaming",
    "http-video-streaming/http-video-streaming-types",
    "imops",
    "led-box/led-box",
    "led-box/led-box-comms",
    "led-box/led-box-standalone",
    "media-utils/apriltag-detection-writer",
    "media-utils/bg-movie-writer",
    "media-utils/create-timelapse",
    "media-utils/dump-frame",
    "media-utils/ffmpeg-writer",
    "media-utils/ffmpeg-rewriter",
    "media-utils/fmf",
    "media-utils/fmf/fmf-cli",
    "media-utils/font-drawing",
    "media-utils/frame-source",
    "media-utils/less-avc-wrapper",
    "media-utils/mkv-parser-kit",
    "media-utils/mkv-strand-reader",
    "media-utils/mp4-writer",
    "media-utils/show-timestamps",
    "media-utils/srt-writer",
    "media-utils/strand-convert",
    "media-utils/tiff-decoder",
    "media-utils/ufmf",
    "media-utils/video2rrd",
    "media-utils/video2srt",
    "media-utils/y4m-writer",
    "nvenc",
    "nvenc/dynlink-cuda",
    "nvenc/dynlink-nvidia-encode",
    "nvenc/dynlink-nvidia-encode/gen-nvenc-bindings",
    "strand-cam",
    "strand-cam/flytrax-io",
    "strand-cam/strand-cam-offline-checkerboards",
    "strand-cam/strand-cam-pylon",
    "strand-cam/strand-cam-pylon-gui",
    "strand-cam/strand-cam-vimba",
    "strand-cam/yew_frontend",
    "strand-cam-csv-config-types",
    "strand-cam-pseudo-cal",
    "strand-cam-storetype",
    "tracking",
    "utils/csv-eof",
    "utils/datetime-conversion",
    "utils/download-verify",
    "utils/enum-iter",
    "utils/env-tracing-logger",
    "utils/env-tracing-logger/env-tracing-logger-sample",
    "utils/groupby",
    "utils/withkey",
    "write-debian-changelog",
    "zip-or-dir",
    "zip-or-dir/dir2zip",
]

exclude = [
    "fastimage",
    "led-box/led-box-firmware",
    "led-box/led-box-firmware-pico",
]

[profile.release]
debug = true

[workspace.dependencies]
adskalman = "0.16"
anyhow = "1"
approx = "0.5"
async-change-tracker = "0.3.4"
axum = "0.8.1"
axum-token-auth = "0.2.0"
base64 = "0.12"
byteorder = "1"
bytes = "1.6"
cam-geom = { version = "0.15", features = ["serde-serialize"] }
camino = "1.1.9"
cast = { version = "0.3", features = ["std"] }
# chrono 0.4.40 introduced Datelike::quarter which conflicts with arrow-arith
# 53.4.0, specifically its ChronoDateExt::quarter. Here we pin chrono to prevent
# updating to chrono 0.4.40. We can remove this pin when
# https://github.com/apache/arrow-rs/pull/7198 is available. (Theoretically,
# Cargo.lock is the preferred way to pin, but that carries other problems.)
chrono = { version = "0.4,<0.4.40", features = ["serde"] }
clap = { version = "4.4.3", features = ["derive", "env", "string"] }
configure = "0.1.1"
cookie = "0.18.0"
cookie_store = "0.21.0"
csv = "1.1"
convert-image = "0.1.0"
delaunator = "1.0"
dlt = "0.13"
dotenv = "0.15.0"
dyn-clone = "1.0.11"
env_logger = "0.11"
eyre = "0.6.12"
fs_extra = "1.1"
futures = "0.3.30"
glob = "0.3.1"
gloo-file = "0.2"
gloo-events = "0.1.1"
gloo-utils = "0.1"
h264-reader = "0.8.0"
hdrhistogram = { version = "7.5.2", default-features = false, features = [
    "serialization",
] }
home = "0.5.9"
http = "1.0"
http-body = "1.0.0"
http-body-util = "0.1.0"
hyper = { version = "1.1", features = ["client", "http1"] }
hyper-util = { version = "0.1.1", features = [
    "client",
    "client-legacy",
    "http1",
    "server",
    "server-auto",
    "tokio",
] }
iana-time-zone = "0.1"
image = { version = "0.25", default-features = false, features = [
    "bmp",
    "jpeg",
    "png",
    "tiff",
] }
include_dir = "0.7.3"
indicatif = "0.17.1"
ipp-sys = "0.4.4"
itertools = "0.10"
js-sys = "0.3.77"
json-lines = { version = "0.1.0", features = ["codec"] }
lazy_static = "1.4"
less-avc = "0.1.4"
levenberg-marquardt = "0.14.0"
libc = "0.2"
libflate = "0.1"
log = "0.4"
lstsq = "0.6.0"
machine-vision-formats = { version = "0.1.3", default-features = false }
memchr = "2.7.2"
mime = "0.3.17"
mp4 = { git = "https://github.com/strawlab/mp4-rust", rev = "e6a68f68d3f662039ab28b2cc20c4c16134f2a8c" }
nalgebra = { version = "0.33", features = ["serde-serialize"] }
nalgebra-mvn = "0.15"
ncollide2d = { package = "ncollide2d-updated", version = "0.36.3" }
ncollide3d = { package = "ncollide3d-updated", version = "0.36.3" }
num-iter = "0.1"
num-traits = "0.2"
obj = { version = "0.10", features = ["genmesh"] }
opencv-ros-camera = { version = "0.15.1", features = ["serde-serialize"] }
openh264 = "0.8.0"
ordered-float = { version = "3.4", features = ["serde"] }
parry2d-f64 = "0.18"
parry3d-f64 = "0.18"
pin-project = "1.0.11"
preferences-serde1 = "2.0.0"
pretty-print-nalgebra = "0.1.0"
qrcodegen = "1.4"
regex = "1.10.3"
re_sdk = { version = "0.22", default-features = false }
re_types = { version = "0.22", default-features = false }
re_build_info = { version = "0.22", default-features = false }
re_build_tools = { version = "0.22", default-features = false }
rerun = { version = "0.22", default-features = false }
resvg = "0.19"
rusttype = "0.9.2"
serde = { version = "1.0", features = ["derive"] }
serde-xml-rs = "0.5" # TODO: switch to https://crates.io/crates/quick-xml
serde_cbor = { version = "0.11.2" }
serde_json = "1.0"
serde_yaml = "0.9"
shellexpand = "2.0"
simba = { version = "0.9", default-features = false }
stream-cancel = "0.8"
tagger = "4.0"
tempfile = "3.4.0"
thiserror = "2.0.11"
tiff = "0.9.0"
tiny-skia = "0.6.1"
tokio = { version = "1", features = ["full"] }
tokio-serial = { version = "5.4.3" }
tokio-stream = { version = "0.1.9", features = ["time"] }
tokio-util = { version = "0.7.3", features = ["codec", "net"] }
toml = "0.5"
tower = "0.5.2"
tower-http = { version = "0.6.2", features = ["fs", "trace"] }
tower-serve-static = "0.1"
tracing = "0.1.41"
tracing-futures = { version = "0.2.5", features = ["futures-03"] }
tracing-panic = "0.1.1"
tracing-test = "0.2.5"
ttf-firacode = "0.1"
usvg = { version = "0.19.0", default-features = false }
uuid = { version = "1.7", default-features = false, features = ["serde"] }
url = "2.5.0"
wasm-bindgen = "0.2.100"
web-sys = "0.3.72"
wasm-bindgen-futures = "0.4"
wasm-logger = "0.2.0"
y4m = { git = "https://github.com/astraw/y4m", rev = "6992473b73838c84cb659387b21d2ab2ebe94766" }
yew = { version = "0.21.0", features = ["csr"] }
yew-tincture = "0.2.2"
# semver breakage in zip 2.5.0 and 2.6.0. See https://github.com/zip-rs/zip2/issues/332 and https://github.com/zip-rs/zip2/issues/328
zip = { version = "2.2.2,<2.5.0", default-features = false, features = [
    "deflate",
    "time",
] }

ads-apriltag = { path = "ads-apriltag" }
ads-webasm = { path = "ads-webasm" }
apriltag-detection-writer = { path = "media-utils/apriltag-detection-writer" }
basic-frame = { path = "basic-frame" }
bisection-search = { path = "geometry/refraction/bisection-search" }
bg-movie-writer = { path = "media-utils/bg-movie-writer" }
braid = { path = "braid" }
braid-april-cal = { path = "geometry/braid-april-cal" }
braid-config-data = { path = "braid-config-data" }
braid-http-session = { path = "braid-http-session" }
braid-offline = { path = "braid-offline" }
braidz-parser = { path = "braidz-parser" }
braidz-rerun = { path = "braidz-rerun" }
braidz-types = { path = "braidz-types" }
braidz-writer = { path = "braid/braidz-writer" }
bui-backend-session = { path = "bui-backend-session" }
bui-backend-session-types = { path = "bui-backend-session/types" }
build-util = { path = "build-util" }
bundle-adj = { path = "geometry/bundle-adj" }
camcal = { path = "geometry/camcal" }
ci2 = { path = "camera/ci2" }
ci2-async = { path = "camera/ci2-async" }
ci2-pylon-types = { path = "camera/ci2-pylon-types" }
ci2-pyloncxx = { path = "camera/ci2-pyloncxx" }
ci2-remote-control = { path = "camera/ci2-remote-control" }
ci2-types = { path = "camera/ci2-types" }
ci2-vimba = { path = "camera/ci2-vimba" }
ci2-vimba-types = { path = "camera/ci2-vimba-types" }
csv-eof = { path = "utils/csv-eof" }
datetime-conversion = { path = "utils/datetime-conversion" }
download-verify = { path = "utils/download-verify" }
dynlink-cuda = { path = "nvenc/dynlink-cuda" }
dynlink-nvidia-encode = { path = "nvenc/dynlink-nvidia-encode" }
enum-iter = { path = "utils/enum-iter" }
env-tracing-logger = { path = "utils/env-tracing-logger" }
event-stream-types = { path = "event-stream-types" }
fastfreeimage = { path = "fastfreeimage" }
ffmpeg-rewriter = { path = "media-utils/ffmpeg-rewriter" }
ffmpeg-writer = { path = "media-utils/ffmpeg-writer" }
flydra-feature-detector = { path = "flydra-feature-detector" }
flydra-feature-detector-types = { path = "flydra-feature-detector/flydra-feature-detector-types" }
flydra-pt-detect-cfg = { path = "flydra-feature-detector/flydra-pt-detect-cfg" }
flydra-types = { path = "flydra-types", default-features = false }
flydra-mvg = { path = "geometry/flydra-mvg" }
flydra2 = { path = "flydra2", default-features = false }
flytrax-apriltags-calibration = { path = "geometry/braid-april-cal/flytrax-apriltags-calibration" }
flytrax-io = { path = "strand-cam/flytrax-io" }
fmf = { path = "media-utils/fmf" }
font-drawing = { path = "media-utils/font-drawing" }
frame-source = { path = "media-utils/frame-source" }
groupby = { path = "utils/groupby" }
http-video-streaming = { path = "http-video-streaming" }
http-video-streaming-types = { path = "http-video-streaming/http-video-streaming-types" }
imops = { path = "imops" }
led-box-comms = { path = "led-box/led-box-comms" }
less-avc-wrapper = { path = "media-utils/less-avc-wrapper" }
mcsc-structs = { path = "geometry/mcsc-structs" }
mkv-strand-reader = { path = "media-utils/mkv-strand-reader" }
mp4-writer = { path = "media-utils/mp4-writer" }
mvg = { path = "geometry/mvg", features = ["serde-serialize"] }
ncollide-geom = { path = "freemovr-calibration/ncollide-geom" }
nvenc = { path = "nvenc" }
opencv-calibrate = { path = "geometry/opencv-calibrate" }
parry-geom = { path = "geometry/parry-geom" }
refraction = { path = "geometry/refraction" }
rust-cam-bui-types = { path = "rust-cam-bui-types" }
simple-obj-parse = { path = "geometry/simple-obj-parse" }
srt-writer = { path = "media-utils/srt-writer" }
strand-cam = { path = "strand-cam", default-features = false }
strand-cam-csv-config-types = { path = "strand-cam-csv-config-types" }
strand-cam-pseudo-cal = { path = "strand-cam-pseudo-cal" }
strand-cam-storetype = { path = "strand-cam-storetype" }
textured-tri-mesh = { path = "geometry/textured-tri-mesh" }
tiff-decoder = { path = "media-utils/tiff-decoder" }
tracking = { path = "tracking" }
ufmf = { path = "media-utils/ufmf" }
undistort-image = { path = "geometry/undistort-image" }
vimba = { path = "camera/vimba" }
withkey = { path = "utils/withkey" }
y4m-writer = { path = "media-utils/y4m-writer" }
zip-or-dir = { path = "zip-or-dir" }

[replace]
# "tokio-threadpool:0.1.6" = {git="https://bare-git.strawlab.org/tokio.git", rev="472e64c1ea67f3976191cb1b291061faf2082735"}
