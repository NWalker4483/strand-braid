html,
body {
    margin: 0;
    padding: 0;
}

body {
    font: 10px 'Helvetica Neue', Helvetica, Arial, sans-serif;
    line-height: 1.4em;
    background: #000000;
    color: #adadad;
    margin: 0 auto;
}

a {
    color: #adadad;
}

input[type="text"], textarea {
    background-color: #5e5e5e;
    color: #bababa;
    border: 0;
}

button {
    margin: 0;
    padding: 0;
    border: 0;
    background: none;
    font-size: 100%;
    vertical-align: baseline;
    font-family: inherit;
    font-weight: inherit;
    color: inherit;
}

button,
input[type="checkbox"] {
    outline: none;
}

.wrapper {
    margin-left: 20px;
    margin-right: 20px;
    margin-top: 2px;
    margin-bottom: 2px;
}

.modal-container {
    background: rgba(77, 77, 77, 1.0);
    position: fixed;
    left: 50px;
    right: 50px;
    height: 400px;
    padding: 20px;
    box-sizing: border-box;
    box-shadow: 0 2px 4px 0 rgba(223, 25, 25, 0.92),
    0 25px 50px 0 rgba(0, 255, 255, 0.91);
}

input[type="text"].ranged-value-input-error {
    background-color: rgb(167, 99, 99);
}

.config-field-textarea {
    width: 100%;
    font-family: monospace;
    white-space: pre;
    font-size: 10px;
    line-height: 1.4em;
}

.reset-background-btn {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
}

.config-field-btns {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100%;
}

.config-field-on-server {
    background: rgba(77, 77, 77, 1.0);
    font-family: monospace;
    white-space: pre;
}

.led-control {
    display: inline-block;
    margin-left: 10px;
    margin-right: 10px;
}

.config-field-editor {
    display: flex;
    flex-direction: row;
    width: 100%;
}

.config-field-col {
    display: inline-block;
}

.config-field-left-col {
    flex-grow: 1;
}

.config-field-middle-col {
    flex-grow: 0;
}

.config-field-right-col {
    flex-grow: 1;
}

.video-field-text {
    display: flex;
    flex-direction: row;
    width: 100%;
}

.video-field-fno {
    display: inline-block;
    flex-grow: 1;
}

.video-field-mousepos {
    display: inline-block;
    flex-grow: 1;
}

.video-field-fps {
    display: inline-block;
    flex-grow: 1;
}

.video-field-canvas {
    padding: 1px;
    border: 1px solid #adadad;
    box-sizing: border-box;
    width: 100%;
    height: auto;
    /* max-height: 600px; */
    cursor: crosshair;
}

.btn {
    padding: 2px;
    margin: 2px;
    border: 1px solid #adadad;
    box-sizing: border-box;
    border-radius: 3px;
}

.btn:enabled {
    cursor: pointer;
}

.btn-active {
    background: #5e5e5e;
}

.toplevel-container {
    padding: 2px;
    margin: 2px;
    box-sizing: border-box;
}

h2 {
    padding: 5px;
    background: #adadad;
    color: #000000;
    margin-top: 0.5em;
    margin-bottom: 0.25em;
}

h3 {
    margin-top: 0.25em;
    margin-bottom: 0.125em;
}

.cam-range-main {
    display: inline-block;
    margin-left: 10px;
    margin-right: 10px;
}

/* See https://alligator.io/css/collapsible/ for the initial inspiration of
wrap-collapsible. */

.wrap-collapsible {
    border-radius: 7px;
    border: 1px solid gray;
}

.wrap-collapsible > label {
    cursor: pointer;
    transition: all 0.25s ease-out;
    border-radius: 7px;

    display: block;

    font-weight: bold;
    font-size: 1.2rem;
    text-align: left;

    padding: 1rem;
}

.wrap-collapsible > label::before {
    content: ' ';
    display: inline-block;

    border-top: 5px solid transparent;
    border-bottom: 5px solid transparent;
    border-left: 5px solid currentColor;

    vertical-align: middle;
    margin-right: .7rem;
    transform: translateY(-2px);

    transition: transform .2s ease-out;
}

.wrap-collapsible > input:checked + label::before {
    transform: rotate(90deg) translateX(-3px);
}

.wrap-collapsible > input:checked + label {
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
    /* border-bottom: 1px solid currentColor; */
}

.wrap-collapsible > input {
    display: none;
}

/* `>` is child combinator and `~` is general sibling combinator, so this will
select any "div" elements and display them when the input is checked */
.wrap-collapsible > input:checked ~ div {
    display: block;
}
.wrap-collapsible > input:not(:checked) ~ div {
    display: none;
}

.wrap-collapsible > div {
    padding: 1em;
}

/* For RecordingPathWidget */

.recording-path-blinker-off {
    display: inline-block;
    position: relative;
    width: 1em;
    height: 1em;
}
.recording-path-blinker-on {
    display: inline-block;
    position: relative;
    width: 1em;
    height: 1em;
}
.recording-path-blinker-on span {
    position: absolute;
    top: 0.1em;
    width: 0.9em;
    height: 0.9em;
    border-radius: 50%;
    background: red;
    animation-timing-function: cubic-bezier(0, 1, 1, 0);
}
.recording-path-blinker-on span:nth-child(1) {
    left: 0em;
    animation: recording-path-blinker-animation 1.0s infinite;
}
@keyframes recording-path-blinker-animation {
    0% {
        transform: scale(0);
    }
    50% {
        transform: scale(0);
    }
    51% {
        transform: scale(1);
    }
    100% {
        transform: scale(1);
    }
}

.recording-path-checkbox {
    opacity: 0;
    position: absolute;
}

.recording-path-widget {
    display: inline-block;
    vertical-align: middle;
    width: 2.5em;
    height: 2.5em;
    border: solid 1px #adadad;
    border-radius: 50%;
    margin-left: 0.5em;
    margin-right: 0.5em;
}

.recording-path-widget-inner {
    background: red;
    display: inline-block;
    vertical-align: middle;
    width: 1.5em;
    height: 1.5em;
    margin: 0.5em;
}

.recording-path-widget-inner-off {
    border-radius: 50%;
}

/* enable this to customize when recording
.recording-path-widget-inner-on {
}
*/

/* End of style for RecordingPathWidget */
